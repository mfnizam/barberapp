name: Release

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  environment:
    name: Prepare Environment
    
    runs-on: ubuntu-latest
    
    environment: development
    env:
      MONGODB_URL: ${{ secrets.MONGODB_URL }}
      JWT_SECRET:  ${{ secrets.JWT_SECRET }}
      SECRET: ${{ secrets.PGP_SECRET_SIGNING_PASSPHRASE }}
      
    outputs:
      MONGODB_URL: ${{ steps.print.outputs.MONGODB_URL }}
      JWT_SECRET: ${{ steps.print.outputs.JWT_SECRET }}   
    
    steps:
      - name: Print inputs passed to the reusable workflow
        id: print
        run: |
          echo "::add-mask::$MONGODB_URL"
          echo "::set-output name=MONGODB_URL::$(gpg --symmetric --batch --passphrase "$SECRET" --output - <(echo "$MONGODB_URL") | base64 -w0)"

          echo "::add-mask::$JWT_SECRET"
          echo "::set-output name=JWT_SECRET::$(gpg --symmetric --batch --passphrase "$SECRET" --output - <(echo "$JWT_SECRET") | base64 -w0)"

  development:
    name: Development
    uses: mfnizam/barberapp-api/.github/workflows/development.yaml@master
    needs: 
      - environment
    secrets:
      MONGODB_URL: ${{ needs.environment.outputs.MONGODB_URL }}
      JWT_SECRET: ${{ needs.environment.outputs.JWT_SECRET }}
      
      # SMTP_HOST: ${{ secrets.SMTP_HOST }}
      # SMTP_PORT: ${{ secrets.SMTP_PORT }}
      # SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
      # SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
      # EMAIL_FROM: ${{ secrets.EMAIL_FROM }}

  release:
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    name: Release Code
    needs: [development]
 
    runs-on: ubuntu-latest
    
    environment: release

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm install

    - name: Release
      run: npm run semantic-release
      env:
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}